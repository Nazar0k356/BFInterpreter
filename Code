.model tiny

.data
   endCode dw ?
   buff dw 10000 dup(?)
   code_buffer db 10000 dup(?)

.code
org 100h
   start:
   mov di, offset buff
   mov cx, 10000
   rep stosw

    mov cl, ds:[80h]
    mov bx, 81h
    add bx, cx
    mov byte ptr ds:[bx], 0

    mov ax, 3d00h ; syscall open file
    mov dx, 82h ; address at which command line is stored 
    int 21h
    mov bx, ax 
 
    mov ah, 3fh ; syscall read file
    mov cx, 10000 ; bytes to read
    lea dx, code_buffer ; to read into code_buffer
    int 21h

    mov di, offset code_buffer
    add ax, di
    mov endcode, ax 

   mov bx, offset buff
   dec di
   mainLoop:
   inc di
   cmp di, endCode
   je fin

   mov al, [di] ;Putting symbol of the code into al

   cmp al, 2Bh ;Comparison with +
   jne minus
    mov al, [bx]
    inc al
    mov [bx], al
    jmp mainLoop

   minus:
   cmp al, 2Dh ;Comparison with -
   jne left
    mov al, [bx]
    dec al
    mov [bx], al
    jmp mainLoop

   left:   
   cmp al, 3Ch ;Comparison with <
   jne right
    sub bx, 2
    jmp mainLoop

   right:
   cmp al, 3Eh ;Comparison with >
   jne coma
    add bx, 2
    jmp mainLoop

   coma: 
   cmp al, 2Ch ;Comparison with ,
   jne dot
    mov ah, 01h
    int 21h
    cmp al, 0dh ;Comparing to cr
    jne notCR
    mov al, 0ah
    notCR:
    mov [bx], al
    jmp mainLoop

   dot: 
   cmp al, 2Eh ;Comparison with .
   jne lbracket
    mov ah, 02h
    mov dl, [bx]
    ;Checking for enter
    cmp dl, 0dh ;Comparing to cr
    je mainLoop
    cmp dl, 0ah
    jne notEnter
    mov dl, 0dh
    int 21h
    mov dl, 0ah
    notEnter:
    int 21h
    jmp mainLoop

   lbracket:   
   cmp al, 5Bh ;Comparison with [
   jne rbracket    
    push di
    jmp mainLoop

   rbracket:
   cmp al, 5Dh ;Comparison with ]  
   jne mainLoop ;This is a comment
    mov al, [bx]
    cmp al, 0
    jne notZeroRbracket
    dec sp
    jmp mainLoop  
    notZeroRbracket:
      pop di
      push di
      jmp mainLoop

   fin:  
   mov ah, 4ch 
   int 21h
end start